# vim:set ft=sh:
# Maintainer: BlackIkeEagle < ike DOT devolder AT gmail DOT com >
# Contributor: DonVla <donvla@users.sourceforge.net>
# Contributor: Ulf Winkelvos <ulf [at] winkelvos [dot] de>
# Contributor: Ralf Barth <archlinux dot org at haggy dot org>
# Contributor: B & monty - Thanks for your hints :)
# Contributor: marzoul
# Contributor: Sergej Pupykin <pupykin.s+arch@gmail.com>
# Contributor: Brad Fanella <bradfanella@archlinux.us>
# Contributor: [vEX] <niechift.dot.vex.at.gmail.dot.com>
# Contributor: Zeqadious <zeqadious.at.gmail.dot.com>
# Contributor: BartÅ‚omiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Maxime Gauduin <alucryd@gmail.com>
# Contributor: hreikin <odroid.forum.com>
#
# Original credits go to Edgar Hucek <gimli at dark-green dot com>
# for his xbmc-vdpau-vdr PKGBUILD at https://archvdr.svn.sourceforge.net/svnroot/archvdr/trunk/archvdr/xbmc-vdpau-vdr/PKGBUILD

pkgname=xbmc-odroid
pkgver=1
pkgrel=1
pkgdesc="XBMC Media Center Gotham mfc Odroid"
provides=('xbmc')
conflicts=('xbmc' 'xbmc-pulse' 'xbmc-svn')
replaces=('xbmc-svn')
arch=('armv7h')
url="http://xbmc.org"
license=('GPL2')
depends=(
'alsa-lib' 'avahi' 'bluez' 'bzip2' 'curl' 'ccache' 'cwiid' 'enca' 'ffmpeg' 'flac' 'fontconfig' 'freetype2' 'fribidi'
'glew' 'glu' 'hicolor-icon-theme' 'jre7-openjdk' 'lame' 'libaacs' 'libao' 'libass' 'libbluray' 'libcap' 'libcdio'
'libcec' 'libdbus' 'libjpeg-turbo' 'libltdl' 'libmad' 'libmariadbclient' 'libmicrohttpd' 'libmodplug' 'libmpeg2'
'libpng' 'libpng12' 'libpulse' 'libtiff' 'libsamplerate' 'libsystemd' 'libssh' 'libusb' 'libva' 'libvdpau' 'libvorbis'
'libxinerama' 'libxml2' 'libxmu' 'libxrandr' 'libxslt' 'libxt' 'lsb-release' 'lzo' 'mesa' 'mysql' 'odroid-libgl-mali'
'pcre' 'python2' 'python2-pillow' 'python2-simplejson' 'rtmpdump' 'sdl' 'sdl_image' 'sdl_mixer' 'smbclient' 'sqlite'
'taglib' 'tinyxml' 'xorg-xdpyinfo' 'xorg-util-macros' 'yajl' 'zlib'
)
makedepends=(
'afpfs-ng' 'boost' 'cmake' 'doxygen' 'git' 'gperf' 'jasper'
'java-runtime' 'libnfs' 'libplist' 'nasm' 'shairplay'
'swig' 'unzip' 'upower' 'zip'
)
optdepends=(
'gdb: for meaningful backtraces in case of trouble - STRONGLY RECOMMENDED'
'afpfs-ng: Apple shares support'
'libnfs: NFS shares support'
'libplist: AirPlay support'
'lirc: Remote controller support'
'pulseaudio: PulseAudio support'
'shairplay: AirPlay support'
'udisks: Automount external drives'
'unrar: Archives support'
'unzip: Archives support'
'upower: Display battery level'
)
install="$pkgname.install"
_commit=867305b97e773186eec599d958bf2d0e2769da64
source=(
	"git+https://github.com/xbmc/xbmc.git#branch=Gotham"
)
sha256sums=(
	'SKIP'
)

_prefix='/usr'

pkgver() {
	cd "$srcdir/xbmc"
	# suggested by marzoul
	git log -1 --date=short --format="%cd.%h" | tr -d '-'
}

prepare() {
	cd xbmc
	git remote add memeka git://github.com/mihailescu2m/xbmc
	git config merge.renamelimit 6000
	git pull memeka Gotham-mfc
	git checkout Gotham-mfc 
	git checkout -b Gotham-mfc-rebase
	git rebase origin/Gotham
}

build() {
	cd xbmc

	# Bootstrapping
	./bootstrap

	# Configuring XBMC
	export PYTHON_VERSION=2.7  # external python v2
	./configure --enable-codec=mfc \
		--enable-libcec \
		--enable-xrandr \
		--enable-neon \
		--disable-debug \
		--enable-optimizations \
		--enable-ccache \
		--enable-gles \
		--enable-non-free  \
		--disable-gl \
		--disable-vdpau \
		--disable-vaapi \
		--disable-crystalhd \
		--disable-openmax \
		--disable-rsxs \
		--disable-projectm \
		--disable-fishbmc \
		--disable-dvdcss \
		--disable-optical-drive \
		--disable-libbluray \
		--enable-texturepacker \
		--with-cpu=cortex-a9 \
		--host=armv7a-hardfloat-linux-gnueabi \
		--enable-nfs \
		--enable-exynos4

	# Now (finally) build
	make
}

package() {
	cd xbmc
	# Running make install
	make DESTDIR="$pkgdir" install

	# Tools
	install -Dm755 $srcdir/xbmc/tools/TexturePacker/TexturePacker \
		${pkgdir}${_prefix}/lib/xbmc/

	# Licenses
	install -dm755 ${pkgdir}${_prefix}/share/licenses/xbmc
	for licensef in LICENSE.GPL copying.txt; do
		mv ${pkgdir}${_prefix}/share/doc/xbmc/${licensef} \
			${pkgdir}${_prefix}/share/licenses/xbmc
	done
}
